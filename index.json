{
  "api/Editor.Google_Sheets.DataItem.html": {
    "href": "api/Editor.Google_Sheets.DataItem.html",
    "title": "Class DataItem | Google Sheets | 2.1.0",
    "keywords": "Class DataItem Namespace Editor.Google_Sheets Represents a key-value pair for Google Sheets data. [Serializable] public class DataItem Inheritance object DataItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields index Represents the numerical index associated with the data item in Google Sheets. public int index Field Value int key Represents the unique identifier or key in a key-value pair for Google Sheets data. public int key Field Value int scriptableObject Holds a reference to a Unity ScriptableObject, enabling enhanced data organization, management, and integration within the Google Sheets data workflow. public ScriptableObject scriptableObject Field Value ScriptableObject scriptableObjectType Specifies the type name of the ScriptableObject to be used, enabling dynamic resolution and operations such as creation, conversion, or manipulation. public string scriptableObjectType Field Value string value Represents a value corresponding to a key in a key-value pair for Google Sheets data. public string value Field Value string"
  },
  "api/Editor.Google_Sheets.GoogleSheetsConfig.html": {
    "href": "api/Editor.Google_Sheets.GoogleSheetsConfig.html",
    "title": "Class GoogleSheetsConfig | Google Sheets | 2.1.0",
    "keywords": "Class GoogleSheetsConfig Namespace Editor.Google_Sheets Represents the configuration settings for accessing and using the Google Sheets API. public class GoogleSheetsConfig : IGoogleSheetsService Inheritance object GoogleSheetsConfig Properties Service Gets the instance of the SheetsService used for interacting with the Google Sheets API. public SheetsService Service { get; } Property Value SheetsService Remarks This property is initialized via the InitializeGoogleSheetsService() method, which sets up the necessary credentials and scopes required to utilize the Google Sheets API. Methods InitializeGoogleSheetsService() Initializes the Google Sheets service instance with the necessary credentials and scopes. public void InitializeGoogleSheetsService() Remarks This method reads the client secret JSON path from the Google Sheets settings, creates credentials, and assigns them to a new instance of the SheetsService. This service instance is then used for subsequent API interactions such as uploading and downloading data from Google Sheets."
  },
  "api/Editor.Google_Sheets.GoogleSheetsDownloader.html": {
    "href": "api/Editor.Google_Sheets.GoogleSheetsDownloader.html",
    "title": "Class GoogleSheetsDownloader | Google Sheets | 2.1.0",
    "keywords": "Class GoogleSheetsDownloader Namespace Editor.Google_Sheets Responsible for downloading data from a specified Google Sheets spreadsheet. public class GoogleSheetsDownloader Inheritance object GoogleSheetsDownloader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DownloadData() Downloads data from the Google Sheets spreadsheet specified in the project settings. public void DownloadData() Remarks This method initializes the Google Sheets service, retrieves the spreadsheet data, and then generates a CSV file from the downloaded data. If an error occurs during the download, an error message is logged and the exception is rethrown. Exceptions Exception Thrown when an error occurs during the download process."
  },
  "api/Editor.Google_Sheets.GoogleSheetsHelper.html": {
    "href": "api/Editor.Google_Sheets.GoogleSheetsHelper.html",
    "title": "Class GoogleSheetsHelper | Google Sheets | 2.1.0",
    "keywords": "Class GoogleSheetsHelper Namespace Editor.Google_Sheets Provides helper methods and properties for managing Google Sheets settings within the editor. public class GoogleSheetsHelper Inheritance object GoogleSheetsHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GoogleSheetsCustomSettings Property to get the instance of GoogleSheetsCustomSettings. public static GoogleSheetsCustomSettings GoogleSheetsCustomSettings { get; } Property Value GoogleSheetsCustomSettings Remarks This property retrieves or creates an instance of the GoogleSheetsCustomSettings which is used to store and manage custom settings related to Google Sheets integration. k_JSONEditorPref The k_JSONEditorPref field is used as the key for storing and retrieving the file path to the JSON file containing client secret information within the Unity Editor preferences. This string acts as an identifier for the preference setting, ensuring that the proper file path is maintained throughout various editor sessions. public static string k_JSONEditorPref { get; } Property Value string k_debugLogEditorPref Constant string representing the preference key for enabling or disabling debug logs related to Google Sheets settings in the editor. public static string k_debugLogEditorPref { get; } Property Value string Remarks This key is used to store and retrieve the user preference for logging debug information in the Unity editor while working with Google Sheets integrations. It ensures consistent behavior and settings across editor sessions."
  },
  "api/Editor.Google_Sheets.GoogleSheetsInstance.html": {
    "href": "api/Editor.Google_Sheets.GoogleSheetsInstance.html",
    "title": "Class GoogleSheetsInstance | Google Sheets | 2.1.0",
    "keywords": "Class GoogleSheetsInstance Namespace Editor.Google_Sheets Manages the interactions with Google Sheets by providing functionalities for uploading and downloading data. public class GoogleSheetsInstance Inheritance object GoogleSheetsInstance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DownloadData() Downloads data from a Google Sheets spreadsheet to a local CSV file. public void DownloadData() UploadData() Uploads data from a local CSV file to a Google Sheets spreadsheet. public void UploadData()"
  },
  "api/Editor.Google_Sheets.GoogleSheetsUploader.html": {
    "href": "api/Editor.Google_Sheets.GoogleSheetsUploader.html",
    "title": "Class GoogleSheetsUploader | Google Sheets | 2.1.0",
    "keywords": "Class GoogleSheetsUploader Namespace Editor.Google_Sheets A utility class that handles the uploading of data from a local CSV file to a Google Sheets spreadsheet. This class reads CSV data from a configured file path and uses the Google Sheets API to paste the data into a specified spreadsheet. public class GoogleSheetsUploader Inheritance object GoogleSheetsUploader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UploadData() Uploads data from a local CSV file to a specified Google Sheets spreadsheet. public void UploadData() Remarks This method reads the contents of a CSV file located at the path specified in the project settings. It then uses the Google Sheets API to paste this data into the first sheet of the spreadsheet. The method logs an error if the update fails."
  },
  "api/Editor.Google_Sheets.html": {
    "href": "api/Editor.Google_Sheets.html",
    "title": "Namespace Editor.Google_Sheets | Google Sheets | 2.1.0",
    "keywords": "Namespace Editor.Google_Sheets Classes DataItem Represents a key-value pair for Google Sheets data. GoogleSheetsConfig Represents the configuration settings for accessing and using the Google Sheets API. GoogleSheetsDownloader Responsible for downloading data from a specified Google Sheets spreadsheet. GoogleSheetsHelper Provides helper methods and properties for managing Google Sheets settings within the editor. GoogleSheetsInstance Manages the interactions with Google Sheets by providing functionalities for uploading and downloading data. GoogleSheetsUploader A utility class that handles the uploading of data from a local CSV file to a Google Sheets spreadsheet. This class reads CSV data from a configured file path and uses the Google Sheets API to paste the data into a specified spreadsheet."
  },
  "api/Editor.MenuItems.html": {
    "href": "api/Editor.MenuItems.html",
    "title": "Class MenuItems | Google Sheets | 2.1.0",
    "keywords": "Class MenuItems Namespace Editor Represents a collection of menu items in the editor. This class provides functionality to manage and interact with the menu items. public static class MenuItems Inheritance object MenuItems Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields csvPath public static string csvPath Field Value string"
  },
  "api/Editor.Project_Settings.GoogleSheetsCustomSettings.html": {
    "href": "api/Editor.Project_Settings.GoogleSheetsCustomSettings.html",
    "title": "Class GoogleSheetsCustomSettings | Google Sheets | 2.1.0",
    "keywords": "Class GoogleSheetsCustomSettings Namespace Editor.Project_Settings Represents the configuration settings necessary for integrating Google Sheets within a Unity project. Manages various parameters like spreadsheet ID and data items required for handling Google Sheets operations. public class GoogleSheetsCustomSettings : ScriptableObject Inheritance object GoogleSheetsCustomSettings Properties ClientSecretJsonPath Specifies the file path to the JSON file containing the client secret credentials required for authenticating API requests to Google Sheets within the Unity project. This path is used to locate the necessary credentials for establishing authorized access from the Unity editor or application. public string ClientSecretJsonPath { get; } Property Value string Data Provides access to the collection of data items utilized for Google Sheets operations within the Unity project. Each item in the list represents a key-value pair that facilitates the interaction and data exchange between the application and the Google Sheets. public List<DataItem> Data { get; set; } Property Value List<DataItem> MSpreadsheetID Provides access to the unique identifier of the current Google Spreadsheet. This identifier is essential for executing operations such as opening, updating, or downloading data from the spreadsheet within the Unity editor environment. public string MSpreadsheetID { get; } Property Value string ShowDebugLogs Determines whether debug logs for Google Sheets operations are enabled within the Unity editor. When set to true, additional diagnostic information is logged to assist with troubleshooting or verifying functionality. public bool ShowDebugLogs { get; } Property Value bool assembliesToInclude Specifies a semicolon-separated list of assembly names to be included during the runtime compilation or evaluation process of the Google Sheets integration. This setting allows for dynamic referencing of specific assemblies required for the tailored handling of spreadsheet data within the Unity project. public string assembliesToInclude { get; set; } Property Value string Methods GetDefaultPath() Retrieves the default file path used for storing data. public string GetDefaultPath() Returns string The string representing the default path for data assets. GetPathForSheet(int) Retrieves the file path associated with the specified spreadsheet ID. public string GetPathForSheet(int spreadsheetID) Parameters spreadsheetID int The unique identifier of the spreadsheet. Returns string The file path as a string linked to the provided spreadsheet ID."
  },
  "api/Editor.Project_Settings.GoogleSheetsEditorUtilities.html": {
    "href": "api/Editor.Project_Settings.GoogleSheetsEditorUtilities.html",
    "title": "Class GoogleSheetsEditorUtilities | Google Sheets | 2.1.0",
    "keywords": "Class GoogleSheetsEditorUtilities Namespace Editor.Project_Settings Provides utility functions for managing Google Sheets integration within the Unity Editor. public static class GoogleSheetsEditorUtilities Inheritance object GoogleSheetsEditorUtilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckValidInformation() Checks if the Google Sheets configuration contains valid information. Ensures that the Spreadsheet ID, CSV path, and JSON path are correctly set and valid. public static bool CheckValidInformation() Returns bool Returns true if all information is valid, otherwise false. IsValidSpreadsheetID() Validates whether the Spreadsheet ID is correctly set and not empty. public static bool IsValidSpreadsheetID() Returns bool Returns true if the Spreadsheet ID is valid, otherwise false. MissingDataPopup(string) Displays a popup with the specified message indicating missing data for Google Sheets integration. Provides options to open project settings or close the popup. public static void MissingDataPopup(string message) Parameters message string The message to be displayed in the popup."
  },
  "api/Editor.Project_Settings.html": {
    "href": "api/Editor.Project_Settings.html",
    "title": "Namespace Editor.Project_Settings | Google Sheets | 2.1.0",
    "keywords": "Namespace Editor.Project_Settings Classes GoogleSheetsCustomSettings Represents the configuration settings necessary for integrating Google Sheets within a Unity project. Manages various parameters like spreadsheet ID and data items required for handling Google Sheets operations. GoogleSheetsEditorUtilities Provides utility functions for managing Google Sheets integration within the Unity Editor."
  },
  "api/Editor.ScriptableObjectConverter.CSVtoSO.html": {
    "href": "api/Editor.ScriptableObjectConverter.CSVtoSO.html",
    "title": "Class CSVtoSO | Google Sheets | 2.1.0",
    "keywords": "Class CSVtoSO Namespace Editor.ScriptableObjectConverter A utility class for converting CSV data into Unity ScriptableObjects. public class CSVtoSO Inheritance object CSVtoSO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This class reads CSV files and creates instances of the specified ScriptableObject type based on the data in the file. It provides functionality to handle the conversion process, ensuring that types and file paths are correctly validated. Properties AddedIDs A dictionary that stores mapping between original identifiers and their corresponding unique GUIDs. public Dictionary<string, string> AddedIDs { get; } Property Value Dictionary<string, string> Remarks This property is used during the conversion process to ensure each generated ScriptableObject has a unique identifier. The key represents the original identifier (e.g., from the CSV data), and the value is the assigned GUID. These mappings are preserved for potential reuse during subsequent operations or validations. Success Indicates whether the CSV to ScriptableObject conversion process was successful. public bool Success { get; } Property Value bool Remarks This property reflects the outcome of the most recent conversion operation. It is set to true if the conversion completes at least one ScriptableObject creation successfully, even if there are warnings or skipped rows due to mismatched data. A value of false usually indicates either a failure to create any ScriptableObjects or errors that interrupted the process. Methods Generate(DataItem) Generates ScriptableObject instances using the specified data item information. public void Generate(DataItem dataItem) Parameters dataItem DataItem The data item containing the scriptableObjectType and CSV file path required for generating the ScriptableObjects."
  },
  "api/Editor.ScriptableObjectConverter.SOtoCSV.html": {
    "href": "api/Editor.ScriptableObjectConverter.SOtoCSV.html",
    "title": "Class SOtoCSV | Google Sheets | 2.1.0",
    "keywords": "Class SOtoCSV Namespace Editor.ScriptableObjectConverter The SOtoCSV class provides functionality to convert ScriptableObject data to CSV format and save it to a file. It also supports creating ScriptableObject instances from CSV data. public class SOtoCSV Inheritance object SOtoCSV Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CSVtoScriptableObjects(DataItem) Converts data from a CSV file into ScriptableObjects and populates their fields based on the provided data item. public void CSVtoScriptableObjects(DataItem dataItem) Parameters dataItem DataItem An instance of DataItem containing information about the ScriptableObject type and the path to the CSV file. CSVtoScriptableObjects(Type, string, bool?) Converts CSV data into ScriptableObjects and populates their fields based on the CSV content. public void CSVtoScriptableObjects(Type scriptableObjectType, string csvPath, bool? skipPopups = false) Parameters scriptableObjectType Type The type of ScriptableObject to create and populate. csvPath string The file path to the CSV file containing the data. skipPopups bool? Determines if popups (e.g., progress bars or dialog messages) should be skipped during the operation. Defaults to false. SaveToFile(string, List<string>, string) Saves data to a specified file in CSV format using the provided headers and data content. public void SaveToFile(string filePath, List<string> data, string headers) Parameters filePath string The full file path where the CSV content will be saved. data List<string> A list of strings representing the data rows to be saved in the file. headers string A string representing the headers for the CSV file. ToCSV(string, List<string>) Converts a collection of data lines and a set of headers into a single CSV-formatted string. public string ToCSV(string headers, List<string> data) Parameters headers string A string representing the headers for the CSV file, usually separated by a delimiter such as a comma. data List<string> A list of data lines where each line corresponds to a row of the CSV file. Returns string A string containing the headers followed by the data rows, formatted as a CSV."
  },
  "api/Editor.ScriptableObjectConverter.html": {
    "href": "api/Editor.ScriptableObjectConverter.html",
    "title": "Namespace Editor.ScriptableObjectConverter | Google Sheets | 2.1.0",
    "keywords": "Namespace Editor.ScriptableObjectConverter Classes CSVtoSO A utility class for converting CSV data into Unity ScriptableObjects. SOtoCSV The SOtoCSV class provides functionality to convert ScriptableObject data to CSV format and save it to a file. It also supports creating ScriptableObject instances from CSV data."
  },
  "api/Editor.Utilities.GetAllScriptableObjects.html": {
    "href": "api/Editor.Utilities.GetAllScriptableObjects.html",
    "title": "Class GetAllScriptableObjects | Google Sheets | 2.1.0",
    "keywords": "Class GetAllScriptableObjects Namespace Editor.Utilities Provides utility methods for working with ScriptableObjects in Unity projects. Includes functionality for retrieving all ScriptableObject assets, discovering classes in assemblies, and listing ScriptableObject types. public class GetAllScriptableObjects Inheritance object GetAllScriptableObjects Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAllClasses(string) Reads all DLL files in the project and extracts class names, filtering out system or generated classes. public static List<string> GetAllClasses(string projectPath) Parameters projectPath string Root project path Returns List<string> List of class names with namespaces GetAllNames() Finds all ScriptableObject assets in the project and returns their paths. public List<string> GetAllNames() Returns List<string> List of paths to ScriptableObject assets GetAllScriptableObjectClasses() Finds all classes derived from ScriptableObject across all project assemblies. public static List<Type> GetAllScriptableObjectClasses() Returns List<Type> List of ScriptableObject class types"
  },
  "api/Editor.Utilities.html": {
    "href": "api/Editor.Utilities.html",
    "title": "Namespace Editor.Utilities | Google Sheets | 2.1.0",
    "keywords": "Namespace Editor.Utilities Classes GetAllScriptableObjects Provides utility methods for working with ScriptableObjects in Unity projects. Includes functionality for retrieving all ScriptableObject assets, discovering classes in assemblies, and listing ScriptableObject types."
  },
  "api/Editor.html": {
    "href": "api/Editor.html",
    "title": "Namespace Editor | Google Sheets | 2.1.0",
    "keywords": "Namespace Editor Classes MenuItems Represents a collection of menu items in the editor. This class provides functionality to manage and interact with the menu items."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| Google Sheets | 2.1.0",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Google Sheets | 2.1.0",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. [2.1.0] - 2024-12-24 ✨ New Features 0ee8ada - Assemblies Dropdown Setup (commit by @Bookfan97) 2213e8d - Save Scriptable Object to Data (commit by @Bookfan97) c4d176b - Convert CSV to Scriptable Object (commit by @Bookfan97) 3719556 - Convert Scriptable Objects to CSV (commit by @Bookfan97) \uD83D\uDC1B Bug Fixes 5b8c157 - Null Data Checks (commit by @Bookfan97) [2.0.0] - 2024-12-02 ✨ New Features c0c85c4 - Multiple Sheets Editor Settings (commit by @Bookfan97) ce8e295 - All Sheets Upload and Download (commit by @Bookfan97) \uD83D\uDC1B Bug Fixes 67fe96b - Move Asset to Settings Folder (commit by @Bookfan97) 2d84ac2 - Update README.md (commit by @Bookfan97) \uD83D\uDD27 Chores f190278 - Update issue templates (commit by @Bookfan97) 9b542af - Create FUNDING.yml (commit by @Bookfan97) [0.0.0] - 2022-11-23 Added Package Setup [2.0.0]: https://github.com/Bookfan97/YetAnotherGoogleSheetsPackageUnity/compare/1.0.0...2.0.0 [2.1.0]: https://github.com/Bookfan97/YetAnotherGoogleSheetsPackageUnity/compare/2.0.0...2.1.0"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Google Sheets | 2.1.0",
    "keywords": "This page redirects to the manual."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| Google Sheets | 2.1.0",
    "keywords": "MIT License Copyright (c) 2024 Noah Day Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "| Google Sheets | 2.1.0",
    "keywords": "Yet Another Google Sheets Package for Unity A package for Unity that syncs data between a local csv and the Google Sheet Explore the docs » Report Bug · Request Feature Table of Contents About The Project Getting Started Prerequisites Installation Usage Roadmap Contributing License Contact Acknowledgments About The Project This package was inspired by a video from Dan Pos, where he implemented a similar system using the Python Scripting package. However, this package is being deprecated in Unity 6.1. I wanted to use this similar system, but rewrite it using native C# code in the editor. This package uses the .dll from the Localization package for the Google Sheets API. (back to top) Getting Started This is an example of how you may give instructions on setting up your project locally. To get a local copy up and running follow these simple example steps. Prerequisites Create Project: https://console.cloud.google.com/projectcreate Once the project is created, open the project in the dashboard. Then select APIS and Services -> Google Drive API, and enable this permission. While under the API & Services Page, select on the left Credentials->Manage Service Accounts and create a service account. Keep in mind to make this account the owner. Once the account is created, in the dropdown select Manage Keys then Add Key. For the key type, select JSON as this will be used in the Editor to verify the account. Share the spreadsheet to the email address created with the service account, with the editor role. Enable API: https://console.cloud.google.com/apis/api/sheets.googleapis.com Get Spreadsheet ID and the Sheet IDs from the URL: https://docs.google.com/spreadsheets/d/[Your Spreadsheet ID Here]/edit?gid=[Your Sheet ID Here]]#gid=[Your Sheet ID Here]] Installation Use UPM to install the package via the following git URL: https://github.com/Bookfan97/YetAnotherGoogleSheetsPackageUnity.git or download and import the unity package manually. Set the correct variables in either the project settings or Tools > Google Sheets > Open Preferences (back to top) Usage Syncing Data between Unity Editor and a Google Spreadsheet (back to top) Roadmap [X] Upload/Download Support [X] CSV -> Scriptable Objects Support [X] Multiple Sheet Support [ ] Sheet Styling [ ] Logic For Updating Exisiting CSV and Scriptable Objects [ ] Editor Window See the open issues for a full list of proposed features (and known issues). (back to top) Contributing Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated. If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\". Don't forget to give the project a star! Thanks again! Fork the Project Create your Feature Branch (git checkout -b feature/AmazingFeature) Commit your Changes (git commit -m 'Add some AmazingFeature') Push to the Branch (git push origin feature/AmazingFeature) Open a Pull Request (back to top) Top contributors: License Distributed under the MIT License. See LICENSE.txt for more information. (back to top) Contact Project Link: https://github.com/Bookfan97/YetAnotherGoogleSheetsPackageUnity (back to top) Acknowledgments Original Video from Dan Pos (back to top)"
  }
}